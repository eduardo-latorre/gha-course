# 5 chapter is on gha-course-2 repo

# If contition, steps context documentation used
# Special contions functions in Github
# - failure(), success(), always(), cancelled()

# Continue on Error, is a boolean function, that allows to continue even failing
# - continue-on-error
# - The conclusion is still sucess even if it fails

# Matrix strategies
name: 6 Controlling Workflow & Execution
on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # steps.[ id ].outputs.cache-hit to check if the cache has been used
        if: steps.cache.outputs.cache-hit != 'true' # If not, it will install the dependencies
        run: npm ci
      # Failing this step to be handle in the next step
      - name: Test code
        continue-on-error: false # Is set to false, but if it was true, will allow continue on error
        id: run-tests # Giving the id to be used in valitation, next step
        run: npm run test
      # If last step succeeds, this step will be skipped
      - name: Upload test report
        # Combining both conditional
        if: failure() && steps.run-tests.outcome == 'failure' # Using step context to compare the outcome
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output content
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [deploy] # Executed when deploy fails
    # needs: [lint, deploy] 
    if: failure() # this will be executed anyways if fails
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "something went wrong"
          echo "${{ toJSON(github) }}"
